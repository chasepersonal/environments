- name: Import instance variables
  include_vars: ./vars/aws/vars.yml

- name: Deploy AWS EC2 instance
  shell: "aws ec2 run-instances \
        --image-id {{ image_id }} \
        --tag-specifications 'ResourceType=instance,Tags=[{% raw -%}{Key=Name,Value={%- endraw %}{{ name }}{% raw -%}}{%- endraw %}]' \
        --count {{ count }} \
        --instance-type {{ instance_type }} \
        --key-name {{ key_name }} \
        --security-group-ids {{ sg_id }} \
        --subnet-id {{ sb_id }} \
        --block-device-mappings file://./roles/aws/files/mapping.json"
  register: aws_output

- set_fact:
    aws_info: "{{ aws_output.stdout | from_json }}"

- name: Show output from AWS Instance Creation
  debug: 
    msg: "{{ aws_info }}"

- set_fact:
    instance_id_output: "{{ aws_info.Instances[0].InstanceId }}"

- name: Display Instance ID
  debug:
    msg: "{{ instance_id_output }}"

- name: Make Public DNS retrieval script executable
  file:
    path: ./roles/aws/files/get-public-dns.sh
    mode: '0755'

- name: Get Public DNS
  shell: ./roles/aws/files/get-public-dns.sh {{ instance_id_output }}
  register: public_dns_output
  until: public_dns_output is defined
  retries: 10
  delay: 10

- name: Make user identifying script executable
  file:
    path: ./roles/aws/files/generate-user.sh
    mode: '0755'

- name: Generating user based on image flavor used
  shell: ./roles/aws/files/generate-user.sh {{ instance_id_output }}
  register: user

- debug:
    msg: 
      - "Your Public DNS is {{ public_dns_output }}"
      - "You can access your new instance as follows:"
      - "ssh -i {{ key-name }}.pem {{ user }}@{{ public_dns_output }}"
      - "Replace the path to the ssh key as needed so that it points to the correct folder."
      - "If the user value listed does not work, try using *root* instead."
   